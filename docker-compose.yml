version: "3"
services:
  poll:
    container_name: poll
    build: ./poll
    ports:
      - 5000:80
    depends_on:
      - redis
    networks:
      - poll-tier
    restart: unless-stopped
    environment:
      - POLL_PORT=${POLL_PORT}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
  worker:
    build: ./worker
    container_name: worker
    links:
      - redis
      - db
    depends_on:
      - redis
      - db
    restart: unless-stopped
    environment:
      - DB_HOSTNAME=${DB_HOSTNAME}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - back-tier
  result:
    container_name: result
    build: ./result
    ports:
      - 5001:80
    depends_on:
      - db
    networks:
      - result-tier
    restart: unless-stopped
    environment:
      - RESULT_PORT=${RESULT_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
  redis:
    image: redis:latest
    container_name: redis
    expose:
      - 6379
    networks:
      - poll-tier
      - back-tier
    restart: unless-stopped
    environment:
      - POLL_HOSTNAME=${POLL_HOSTNAME}
      - WORKER_HOSTNAME=${WORKER_HOSTNAME}
  db:
    image: postgres:9
    container_name: db
    environment:
      - WORKER_HOSTNAME=${WORKER_HOSTNAME}
      - RESULT_HOSTNAME=${RESULT_HOSTNAME}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    networks:
      - result-tier
      - back-tier
    restart: unless-stopped
    expose:
      - 5432
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - db-data:/usr/share/db
networks:
  poll-tier:
    driver: bridge
  result-tier:
    driver: bridge
  back-tier:
    driver: bridge
volumes:
  db-data:
    driver: local